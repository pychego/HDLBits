/*
根据matlab Jacobian得到的C++代码
*/
#include "mlp.h"
#include "math.h"

using namespace std;

float **Jacobian(float x, float y, float z, float a, float b, float c)
{

    float J[6][6] = {{0}};
    J[0][0] = -(0.5 * fabs((4.0 * sin(0.017453 * b) - 1.0 * x - 24.233 * cos(0.017453 * b) * cos(0.017453 * c) + 6.9222 * cos(0.017453 * b) * sin(0.017453 * c) + 35.825)) * (4.0 * sin(0.017453 * b) - 1.0 * x - 1.0 * x + 4.0 * sin(0.017453 * b) - 24.233 * cos(0.017453 * b) * cos(0.017453 * c) + 6.9222 * cos(0.017453 * b) * sin(0.017453 * c) - 24.233 * cos(0.017453 * b) * cos(0.017453 * c) + 6.9222 * cos(0.017453 * b) * sin(0.017453 * c) + 71.649)) / (sqrt((4.0 * sin(0.017453 * b) - 1.0 * x - 24.233 * cos(0.017453 * b) * cos(0.017453 * c) + 6.9222 * cos(0.017453 * b) * sin(0.017453 * c) + 35.825) * (4.0 * sin(0.017453 * b) - 1.0 * x - 24.233 * cos(0.017453 * b) * cos(0.017453 * c) + 6.9222 * cos(0.017453 * b) * sin(0.017453 * c) + 35.825)) * sqrt(fabs((4.0 * sin(0.017453 * b) - 1.0 * x - 24.233 * cos(0.017453 * b) * cos(0.017453 * c) + 6.9222 * cos(0.017453 * b) * sin(0.017453 * c) + 35.825)) ^ 2 + fabs(pow((z - 4.0 * cos(0.017453 * a) * cos(0.017453 * b) + 6.9222 * cos(0.017453 * c) * sin(0.017453 * a) + 24.233 * sin(0.017453 * a) * sin(0.017453 * c) - 24.233 * cos(0.017453 * a) * cos(0.017453 * c) * sin(0.017453 * b) + 6.9222 * cos(0.017453 * a) * sin(0.017453 * b) * sin(0.017453 * c) - 4.0), 2)) + fabs(pow((y + 6.9222 * cos(0.017453 * a) * cos(0.017453 * c) + 4.0 * cos(0.017453 * b) * sin(0.017453 * a) + 24.233 * cos(0.017453 * a) * sin(0.017453 * c) + 24.233 * cos(0.017453 * c) * sin(0.017453 * a) * sin(0.017453 * b) - 6.9222 * sin(0.017453 * a) * sin(0.017453 * b) * sin(0.017453 * c) + 10.028), 2))));
}